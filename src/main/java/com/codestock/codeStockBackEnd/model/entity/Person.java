package com.codestock.codeStockBackEnd.model.entity;

import jakarta.persistence.*;
import lombok.*;

import java.io.Serializable;
import java.util.Date;

/**
 * Person is an entity class that represents a person in the system.
 * It uses Lombok annotations for boilerplate code reduction and JPA annotations for ORM mapping.
 * It implements Serializable interface for possible serialization.
 * It also uses Lombok's @Builder annotation to implement the Builder pattern.
 */
@Data // Generates getters and setters
@AllArgsConstructor // Generates a constructor with all arguments
@NoArgsConstructor // Generates a no-argument constructor
@ToString // Generates toString method
@Builder // Implements the Builder pattern
@Entity // Indicates that this is an entity class
@Table(name = "person") // Maps this entity to the "person" table in the database
public class Person implements Serializable {
    // Attributes

    @Id // Indicates that this is the primary key of the entity
    @Column(name = "idPerson") // Maps this field to the "idPerson" column in the database
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Indicates that this value is automatically generated by the database
    Integer idPerson;

    @Column(name = "name") // Maps this field to the "name" column in the database
    String name;

    @Column(name = "lastName") // Maps this field to the "lastName" column in the database
    String lastName;

    @Column(name = "dateOfBirth") // Maps this field to the "dateOfBirth" column in the database
    Date dateOfBirth;

    @Column(name = "gender") // Maps this field to the "gender" column in the database
    String gender;


    @Column(name = "phone") // Maps this field to the "phone" column in the database
    String phone;
}